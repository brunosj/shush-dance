/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    events: Event;
    releases: Release;
    merch: Merch;
    artists: Artist;
    tracks: Track;
    pages: Page;
    audio: Audio;
    media: Media;
    users: User;
    sales: Sale;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    socials: Social;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events".
 */
export interface Event {
  id: string;
  title: string;
  event_information?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  image?: string | Media | null;
  date: string;
  location: string;
  artists?: (string | Artist)[] | null;
  ticketsAvailable?: boolean | null;
  ticketTiers?:
    | {
        tierName: string;
        price: string;
        visible?: boolean | null;
        stripePriceId: string;
        ticketLink?: string | null;
        id?: string | null;
      }[]
    | null;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  caption?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "artists".
 */
export interface Artist {
  id: string;
  artistName: string;
  artist_bio?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  image?: string | Media | null;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "releases".
 */
export interface Release {
  id: string;
  title: string;
  tracks?: (string | Track)[] | null;
  artist: string | Artist;
  description?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  credits?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  buyLink?: string | null;
  artwork: string | Media;
  images?:
    | {
        image: string | Media;
        id?: string | null;
      }[]
    | null;
  catalogNumber: string;
  releaseYear: number;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tracks".
 */
export interface Track {
  id: string;
  audioGroup?: {
    audioFile?: (string | null) | Audio;
    audioHighQuality?: (string | null) | Audio;
    audioUpload?: (string | null) | Audio;
  };
  title?: string | null;
  artist: string | Artist;
  release?: (string | null) | Release;
  description?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "audio".
 */
export interface Audio {
  id: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "merch".
 */
export interface Merch {
  id: string;
  title: string;
  itemType: string;
  description?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  buyLink?: string | null;
  mainImage: string | Media;
  images?:
    | {
        image?: string | Media | null;
        id?: string | null;
      }[]
    | null;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  content?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  showEventsFirst?: boolean | null;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name?: string | null;
  roles?: ('admin' | 'user')[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sales".
 */
export interface Sale {
  id: string;
  itemName: string;
  artist?: string | null;
  itemType?: string | null;
  package?: string | null;
  option?: string | null;
  type: 'record' | 'merch' | 'digital' | 'track' | 'album' | 'package';
  itemPrice?: number | null;
  quantity?: number | null;
  subTotal?: number | null;
  currency?: string | null;
  additionalFanContribution?: number | null;
  itemTotal?: number | null;
  netAmount?: number | null;
  transactionFee?: number | null;
  feeType?: string | null;
  amountYouReceived?: number | null;
  sellerTax?: number | null;
  marketplaceTax?: number | null;
  taxRate?: number | null;
  shipping?: number | null;
  buyerName?: string | null;
  buyerEmail?: string | null;
  buyerPhone?: string | null;
  city?: string | null;
  regionOrState?: string | null;
  country?: string | null;
  countryCode?: string | null;
  bandcampTransactionId?: string | null;
  bandcampTransactionItemId: string;
  bandcampRelatedTransactionId?: string | null;
  itemUrl?: string | null;
  referer?: string | null;
  refererUrl?: string | null;
  catalogNumber?: string | null;
  upc?: string | null;
  isrc?: string | null;
  buyerNote?: string | null;
  soldAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "socials".
 */
export interface Social {
  id: string;
  items?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: string | Page;
          } | null;
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
